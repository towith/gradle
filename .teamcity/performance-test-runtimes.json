[ {
  "scenario" : "org.gradle.performance.regression.java.JavaUpToDatePerformanceTest.up-to-date assemble with local build cache enabled (parallel false)",
  "runtimes" : [ {
    "testProject" : "largeJavaMultiProject",
    "linux" : 693000
  }, {
    "testProject" : "largeMonolithicJavaProject",
    "linux" : 308000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.java.JavaABIChangePerformanceTest.assemble for abi change",
  "runtimes" : [ {
    "testProject" : "largeGroovyMultiProject",
    "linux" : 705000
  }, {
    "testProject" : "largeJavaMultiProject",
    "linux" : 520000
  }, {
    "testProject" : "largeMonolithicJavaProject",
    "linux" : 1024000
  }, {
    "testProject" : "largeMonolithicGroovyProject",
    "linux" : 1710000
  } ]
}, {
  "scenario" : "org.gradle.performance.experiment.nativeplatform.NativeParallelPerformanceTest.clean assemble with parallel workers",
  "runtimes" : [ {
    "testProject" : "bigNative",
    "linux" : 670000
  }, {
    "testProject" : "smallNative",
    "linux" : 114000
  }, {
    "testProject" : "mediumNative",
    "linux" : 186000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.nativeplatform.NativeBuildPerformanceTest.assemble with source file change",
  "runtimes" : [ {
    "testProject" : "bigCppMulti",
    "linux" : 278000
  }, {
    "testProject" : "bigCppApp",
    "linux" : 143000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.buildcache.TaskOutputCachingJavaPerformanceTest.clean assemble for non-abi change with local cache",
  "runtimes" : [ {
    "testProject" : "largeJavaMultiProject",
    "linux" : 951000
  } ]
}, {
  "scenario" : "org.gradle.performance.experiment.maven.JavaTestGradleVsMavenPerformanceTest.clean test (Gradle vs Maven)",
  "runtimes" : [ {
    "testProject" : "mediumJavaMultiProject",
    "linux" : 1221000
  }, {
    "testProject" : "mediumMonolithicJavaProject",
    "linux" : 535000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.java.JavaFirstUsePerformanceTest.first use",
  "runtimes" : [ {
    "testProject" : "largeJavaMultiProjectKotlinDsl",
    "linux" : 989000
  }, {
    "testProject" : "largeJavaMultiProject",
    "linux" : 765000
  }, {
    "testProject" : "largeMonolithicJavaProject",
    "linux" : 425000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.java.JavaConfigurationPerformanceTest.configure",
  "runtimes" : [ {
    "testProject" : "largeJavaMultiProjectKotlinDsl",
    "linux" : 375000
  }, {
    "testProject" : "largeJavaMultiProject",
    "linux" : 264000
  }, {
    "testProject" : "largeMonolithicJavaProject",
    "linux" : 139000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.android.RealLifeAndroidStudioMockupPerformanceTest.get IDE model for Android Studio",
  "runtimes" : [ {
    "testProject" : "largeAndroidBuild",
    "linux" : 1261000
  }, {
    "testProject" : "k9AndroidBuild",
    "linux" : 197000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.java.JavaIDEModelPerformanceTest.get IDE model for IDEA",
  "runtimes" : [ {
    "testProject" : "largeMonolithicJavaProject",
    "linux" : 117000
  }, {
    "testProject" : "largeJavaMultiProject",
    "linux" : 469000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.java.JavaFirstUsePerformanceTest.cold daemon",
  "runtimes" : [ {
    "testProject" : "largeJavaMultiProjectKotlinDsl",
    "linux" : 986000
  }, {
    "testProject" : "largeJavaMultiProject",
    "linux" : 1083000
  }, {
    "testProject" : "largeMonolithicJavaProject",
    "linux" : 374000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.java.JavaDependencyReportPerformanceTest.generate dependency report",
  "runtimes" : [ {
    "testProject" : "largeMonolithicJavaProject",
    "linux" : 142000
  }, {
    "testProject" : "largeJavaMultiProject",
    "linux" : 279000
  } ]
}, {
  "scenario" : "org.gradle.performance.experiment.maven.JavaTestGradleVsMavenPerformanceTest.clean assemble (Gradle vs Maven)",
  "runtimes" : [ {
    "testProject" : "mediumJavaMultiProject",
    "linux" : 416000
  }, {
    "testProject" : "mediumMonolithicJavaProject",
    "linux" : 193000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.buildcache.TaskOutputCachingJavaPerformanceTest.clean assemble with empty remote http cache",
  "runtimes" : [ {
    "testProject" : "largeJavaMultiProject",
    "linux" : 882000
  }, {
    "testProject" : "largeMonolithicJavaProject",
    "linux" : 988000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.java.JavaConfigurationCachePerformanceTest.assemble loading configuration cache state with hot daemon",
  "runtimes" : [ {
    "testProject" : "smallJavaMultiProject",
    "linux" : 186000
  }, {
    "testProject" : "largeJavaMultiProjectNoBuildSrc",
    "linux" : 386000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.nativeplatform.NativeCleanBuildPerformanceTest.clean assemble (native)",
  "runtimes" : [ {
    "testProject" : "mediumCppAppWithMacroIncludes",
    "linux" : 230000
  }, {
    "testProject" : "smallNative",
    "linux" : 307000
  }, {
    "testProject" : "mediumCppMultiWithMacroIncludes",
    "linux" : 489000
  }, {
    "testProject" : "bigNative",
    "linux" : 753000
  }, {
    "testProject" : "bigCppApp",
    "linux" : 574000
  }, {
    "testProject" : "mediumCppMulti",
    "linux" : 486000
  }, {
    "testProject" : "bigCppMulti",
    "linux" : 1482000
  }, {
    "testProject" : "smallCppApp",
    "linux" : 298000
  }, {
    "testProject" : "mediumNative",
    "linux" : 270000
  }, {
    "testProject" : "multiNative",
    "linux" : 1855000
  }, {
    "testProject" : "smallCppMulti",
    "linux" : 319000
  }, {
    "testProject" : "mediumCppApp",
    "linux" : 227000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.corefeature.LargeDependencyGraphPerformanceTest.resolve large dependency graph (parallel = false, locking = true)",
  "runtimes" : [ {
    "testProject" : "excludeRuleMergingBuild",
    "linux" : 246000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.corefeature.RichConsolePerformanceTest.clean assemble with rich console",
  "runtimes" : [ {
    "testProject" : "largeJavaMultiProject",
    "linux" : 717000
  }, {
    "testProject" : "largeMonolithicJavaProject",
    "linux" : 820000
  }, {
    "testProject" : "bigNative",
    "linux" : 185000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.nativeplatform.NativeBuildDependentsPerformanceTest.run libA0:dependentComponents",
  "runtimes" : [ {
    "testProject" : "nativeDependents",
    "linux" : 535000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.corefeature.ParallelDownloadsPerformanceTest.resolves dependencies from external repository",
  "runtimes" : [ {
    "testProject" : "springBootApp",
    "linux" : 332000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.nativeplatform.NativeCleanBuildPerformanceTest.clean assemble (native, parallel)",
  "runtimes" : [ {
    "testProject" : "manyProjectsNative",
    "linux" : 696000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.java.JavaNonABIChangePerformanceTest.assemble for non-abi change",
  "runtimes" : [ {
    "testProject" : "largeJavaMultiProject",
    "linux" : 492000
  }, {
    "testProject" : "largeGroovyMultiProject",
    "linux" : 617000
  }, {
    "testProject" : "largeMonolithicJavaProject",
    "linux" : 1024000
  }, {
    "testProject" : "largeMonolithicGroovyProject",
    "linux" : 1700000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.corefeature.DeprecationCreationPerformanceTest.create many deprecation warnings",
  "runtimes" : [ {
    "testProject" : "generateLotsOfDeprecationWarnings",
    "linux" : 108000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.android.FasterIncrementalAndroidBuildsPerformanceTest.faster non-abi change (build comparison)",
  "runtimes" : [ {
    "testProject" : "santaTrackerAndroidJavaBuild",
    "linux" : 377000
  }, {
    "testProject" : "santaTrackerAndroidBuild",
    "linux" : 413000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.nativeplatform.RealWorldNativePluginPerformanceTest.build with build file change",
  "runtimes" : [ {
    "testProject" : "smallNativeMonolithic",
    "linux" : 619000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.nativeplatform.SwiftBuildPerformanceTest.incremental compile",
  "runtimes" : [ {
    "testProject" : "mediumSwiftMulti",
    "linux" : 533000
  }, {
    "testProject" : "bigSwiftApp",
    "linux" : 184000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.nativeplatform.NativeBuildPerformanceTest.up-to-date assemble (native)",
  "runtimes" : [ {
    "testProject" : "bigCppMulti",
    "linux" : 278000
  }, {
    "testProject" : "bigCppApp",
    "linux" : 109000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.java.JavaTestChangePerformanceTest.test for non-abi change",
  "runtimes" : [ {
    "testProject" : "largeMonolithicJavaProject",
    "linux" : 1442000
  }, {
    "testProject" : "mediumJavaMultiProjectWithTestNG",
    "linux" : 288000
  }, {
    "testProject" : "largeJavaMultiProject",
    "linux" : 588000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.corefeature.IdeIntegrationPerformanceTest.idea",
  "runtimes" : [ {
    "testProject" : "largeMonolithicJavaProject",
    "linux" : 148000
  }, {
    "testProject" : "largeJavaMultiProject",
    "linux" : 360000
  } ]
}, {
  "scenario" : "org.gradle.performance.experiment.maven.JavaTestGradleVsMavenPerformanceTest.assemble for non-abi change (Gradle vs Maven)",
  "runtimes" : [ {
    "testProject" : "mediumMonolithicJavaProject",
    "linux" : 295000
  }, {
    "testProject" : "mediumJavaMultiProject",
    "linux" : 682000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.java.JavaCleanAssemblePerformanceTest.clean assemble",
  "runtimes" : [ {
    "testProject" : "mediumJavaCompositeBuild",
    "linux" : 302000
  }, {
    "testProject" : "mediumJavaPredefinedCompositeBuild",
    "linux" : 303000
  }, {
    "testProject" : "largeJavaMultiProject",
    "linux" : 479000
  }, {
    "testProject" : "largeMonolithicJavaProject",
    "linux" : 529000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.buildcache.TaskOutputCachingSwiftPerformanceTest.clean assemble with local cache (swift)",
  "runtimes" : [ {
    "testProject" : "mediumSwiftMulti",
    "linux" : 513000
  }, {
    "testProject" : "bigSwiftApp",
    "linux" : 315000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.corefeature.LargeDependencyGraphPerformanceTest.resolve large dependency graph (parallel = true, locking = true)",
  "runtimes" : [ {
    "testProject" : "excludeRuleMergingBuild",
    "linux" : 204000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.java.JavaUpToDatePerformanceTest.up-to-date assemble with local build cache enabled (parallel true)",
  "runtimes" : [ {
    "testProject" : "largeJavaMultiProject",
    "linux" : 469000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.buildcache.TaskOutputCachingNativePerformanceTest.clean assemble with local cache (native project)",
  "runtimes" : [ {
    "testProject" : "bigCppMulti",
    "linux" : 497000
  }, {
    "testProject" : "bigNative",
    "linux" : 232000
  }, {
    "testProject" : "bigCppApp",
    "linux" : 234000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.nativeplatform.SwiftCleanBuildPerformanceTest.clean assemble (swift)",
  "runtimes" : [ {
    "testProject" : "mediumSwiftMulti",
    "linux" : 1067000
  }, {
    "testProject" : "bigSwiftApp",
    "linux" : 730000
  } ]
}, {
  "scenario" : "org.gradle.performance.experiment.buildcache.LocalTaskOutputCacheCrossBuildPerformanceTest.assemble with local cache (build comparison)",
  "runtimes" : [ {
    "testProject" : "largeJavaMultiProject",
    "linux" : 1333000
  }, {
    "testProject" : "largeMonolithicJavaProject",
    "linux" : 1419000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.corefeature.TaskCreationPerformanceTest.create many tasks",
  "runtimes" : [ {
    "testProject" : "createLotsOfTasks",
    "linux" : 135000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.android.RealLifeAndroidBuildSlowPerformanceTest.clean phthalic:assembleDebug with clean transforms cache",
  "runtimes" : [ {
    "testProject" : "largeAndroidBuild",
    "linux" : 910000
  } ]
}, {
  "scenario" : "org.gradle.performance.experiment.java.JavaLibraryPluginPerformanceTest.java-library vs java",
  "runtimes" : [ {
    "testProject" : "largeJavaMultiProject",
    "linux" : 343000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.android.RealLifeAndroidBuildPerformanceTest.non-abi change",
  "runtimes" : [ {
    "testProject" : "santaTrackerAndroidBuild",
    "linux" : 580000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.java.JavaConfigurationCachePerformanceTest.assemble storing configuration cache state with hot daemon",
  "runtimes" : [ {
    "testProject" : "largeJavaMultiProjectNoBuildSrc",
    "linux" : 384000
  }, {
    "testProject" : "smallJavaMultiProject",
    "linux" : 187000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.nativeplatform.RealWorldNativePluginPerformanceTest.build with 0 parallel workers",
  "runtimes" : [ {
    "testProject" : "nativeMonolithic",
    "linux" : 969000
  }, {
    "testProject" : "nativeMonolithicOverlapping",
    "linux" : 968000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.buildcache.TaskOutputCachingJavaPerformanceTest.clean assemble with local cache",
  "runtimes" : [ {
    "testProject" : "largeJavaMultiProject",
    "linux" : 877000
  }, {
    "testProject" : "largeMonolithicJavaProject",
    "linux" : 1016000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.android.RealLifeAndroidBuildPerformanceTest.abi change",
  "runtimes" : [ {
    "testProject" : "santaTrackerAndroidBuild",
    "linux" : 822000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.corefeature.ExcludeRuleMergingPerformanceTest.merge exclude rules (parallel)",
  "runtimes" : [ {
    "testProject" : "excludeRuleMergingBuild",
    "linux" : 238000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.inception.BuildSrcApiChangePerformanceTest.buildSrc abi change",
  "runtimes" : [ {
    "testProject" : "largeJavaMultiProjectKotlinDsl",
    "linux" : 1564000
  }, {
    "testProject" : "mediumMonolithicJavaProject",
    "linux" : 241000
  }, {
    "testProject" : "largeJavaMultiProject",
    "linux" : 1034000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.android.RealLifeAndroidBuildSlowPerformanceTest.clean assembleDebug with clean transforms cache",
  "runtimes" : [ {
    "testProject" : "santaTrackerAndroidBuild",
    "linux" : 1875000
  }, {
    "testProject" : "largeAndroidBuild",
    "linux" : 1636000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.java.JavaConfigurationCachePerformanceTest.assemble storing configuration cache state with cold daemon",
  "runtimes" : [ {
    "testProject" : "largeJavaMultiProjectNoBuildSrc",
    "linux" : 655000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.android.RealLifeAndroidBuildPerformanceTest.run assembleDebug",
  "runtimes" : [ {
    "testProject" : "k9AndroidBuild",
    "linux" : 171000
  }, {
    "testProject" : "largeAndroidBuild",
    "linux" : 682000
  }, {
    "testProject" : "santaTrackerAndroidBuild",
    "linux" : 490000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.nativeplatform.NativeBuildDependentsPerformanceTest.run libA0:buildDependentsLibA0",
  "runtimes" : [ {
    "testProject" : "nativeDependents",
    "linux" : 550000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.corefeature.VerboseTestOutputPerformanceTest.cleanTest test with verbose test output",
  "runtimes" : [ {
    "testProject" : "withVerboseJUnit",
    "linux" : 187000
  }, {
    "testProject" : "withVerboseTestNG",
    "linux" : 172000
  } ]
}, {
  "scenario" : "org.gradle.performance.experiment.nativeplatform.NativePreCompiledHeaderPerformanceTest.clean assemble with precompiled headers",
  "runtimes" : [ {
    "testProject" : "smallPCHNative",
    "linux" : 123000
  }, {
    "testProject" : "mediumPCHNative",
    "linux" : 302000
  }, {
    "testProject" : "bigPCHNative",
    "linux" : 1079000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.nativeplatform.RealWorldNativePluginPerformanceTest.build with 12 parallel workers",
  "runtimes" : [ {
    "testProject" : "nativeMonolithic",
    "linux" : 766000
  }, {
    "testProject" : "nativeMonolithicOverlapping",
    "linux" : 766000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.corefeature.ArchiveTreePerformanceTest.visiting gzip tar trees",
  "runtimes" : [ {
    "testProject" : "archivePerformanceProject",
    "linux" : 167000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.java.JavaFirstUsePerformanceTest.clean checkout",
  "runtimes" : [ {
    "testProject" : "largeMonolithicJavaProject",
    "linux" : 418000
  }, {
    "testProject" : "largeJavaMultiProject",
    "linux" : 1114000
  }, {
    "testProject" : "largeJavaMultiProjectKotlinDsl",
    "linux" : 1027000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.android.RealLifeAndroidBuildPerformanceTest.run help",
  "runtimes" : [ {
    "testProject" : "largeAndroidBuild",
    "linux" : 216000
  }, {
    "testProject" : "k9AndroidBuild",
    "linux" : 125000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.buildcache.TaskOutputCachingJavaPerformanceTest.clean assemble with remote https cache",
  "runtimes" : [ {
    "testProject" : "largeJavaMultiProject",
    "linux" : 910000
  }, {
    "testProject" : "largeMonolithicJavaProject",
    "linux" : 1024000
  } ]
}, {
  "scenario" : "org.gradle.performance.experiment.maven.JavaTestGradleVsMavenPerformanceTest.test for non-abi change (Gradle vs Maven)",
  "runtimes" : [ {
    "testProject" : "mediumJavaMultiProject",
    "linux" : 1880000
  }, {
    "testProject" : "mediumMonolithicJavaProject",
    "linux" : 880000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.java.JavaTasksPerformanceTest.tasks --all",
  "runtimes" : [ {
    "testProject" : "largeJavaMultiProject",
    "linux" : 326000
  }, {
    "testProject" : "largeMonolithicJavaProject",
    "linux" : 144000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.nativeplatform.RealWorldNativePluginPerformanceTest.build with header file change",
  "runtimes" : [ {
    "testProject" : "mediumNativeMonolithic",
    "linux" : 270000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.java.JavaConfigurationCachePerformanceTest.assemble loading configuration cache state with cold daemon",
  "runtimes" : [ {
    "testProject" : "largeJavaMultiProjectNoBuildSrc",
    "linux" : 670000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.corefeature.ArchiveTreePerformanceTest.visiting zip trees",
  "runtimes" : [ {
    "testProject" : "archivePerformanceProject",
    "linux" : 228000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.buildcache.TaskOutputCachingJavaPerformanceTest.clean assemble for abi change with local cache",
  "runtimes" : [ {
    "testProject" : "largeJavaMultiProject",
    "linux" : 998000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.java.JavaIDEModelPerformanceTest.get IDE model for Eclipse",
  "runtimes" : [ {
    "testProject" : "largeJavaMultiProject",
    "linux" : 467000
  }, {
    "testProject" : "largeMonolithicJavaProject",
    "linux" : 114000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.corefeature.ParallelDownloadsPerformanceTest.resolves dependencies from external repository (parallel)",
  "runtimes" : [ {
    "testProject" : "springBootApp",
    "linux" : 270000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.buildcache.TaskOutputCachingJavaPerformanceTest.clean assemble with remote http cache",
  "runtimes" : [ {
    "testProject" : "largeMonolithicJavaProject",
    "linux" : 1010000
  }, {
    "testProject" : "largeJavaMultiProject",
    "linux" : 894000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.corefeature.LargeDependencyGraphPerformanceTest.resolve large dependency graph (parallel = true, locking = false)",
  "runtimes" : [ {
    "testProject" : "excludeRuleMergingBuild",
    "linux" : 226000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.corefeature.TaskAvoidancePerformanceTest.help with lazy and eager tasks",
  "runtimes" : [ {
    "testProject" : "largeMonolithicJavaProject",
    "linux" : 82000
  }, {
    "testProject" : "largeJavaMultiProject",
    "linux" : 141000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.java.JavaTasksPerformanceTest.tasks",
  "runtimes" : [ {
    "testProject" : "largeJavaMultiProject",
    "linux" : 291000
  }, {
    "testProject" : "largeMonolithicJavaProject",
    "linux" : 149000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.corefeature.ArchiveTreePerformanceTest.visiting tar trees",
  "runtimes" : [ {
    "testProject" : "archivePerformanceProject",
    "linux" : 162000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.java.JavaUpToDatePerformanceTest.up-to-date assemble (parallel false)",
  "runtimes" : [ {
    "testProject" : "largeJavaMultiProject",
    "linux" : 652000
  }, {
    "testProject" : "largeMonolithicJavaProject",
    "linux" : 289000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.corefeature.LargeDependencyGraphPerformanceTest.resolve large dependency graph from file repo",
  "runtimes" : [ {
    "testProject" : "excludeRuleMergingBuild",
    "linux" : 388000
  } ]
}, {
  "scenario" : "org.gradle.performance.experiment.java.ParallelBuildPerformanceTest.clean assemble with 4 parallel workers",
  "runtimes" : [ {
    "testProject" : "largeJavaMultiProject",
    "linux" : 488000
  }, {
    "testProject" : "largeMonolithicJavaProject",
    "linux" : 351000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.android.FasterIncrementalAndroidBuildsPerformanceTest.faster abi change (build comparison)",
  "runtimes" : [ {
    "testProject" : "santaTrackerAndroidJavaBuild",
    "linux" : 406000
  }, {
    "testProject" : "santaTrackerAndroidBuild",
    "linux" : 799000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.buildcache.TaskOutputCachingJavaPerformanceTest.clean assemble with empty local cache",
  "runtimes" : [ {
    "testProject" : "largeMonolithicJavaProject",
    "linux" : 972000
  }, {
    "testProject" : "largeJavaMultiProject",
    "linux" : 874000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.corefeature.IdeIntegrationPerformanceTest.eclipse",
  "runtimes" : [ {
    "testProject" : "largeJavaMultiProject",
    "linux" : 393000
  }, {
    "testProject" : "largeMonolithicJavaProject",
    "linux" : 150000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.corefeature.LargeDependencyGraphPerformanceTest.resolve large dependency graph (parallel = false, locking = false)",
  "runtimes" : [ {
    "testProject" : "excludeRuleMergingBuild",
    "linux" : 273000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.android.RealLifeAndroidBuildPerformanceTest.run clean phthalic:assembleDebug",
  "runtimes" : [ {
    "testProject" : "largeAndroidBuild",
    "linux" : 597000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.nativeplatform.SwiftBuildPerformanceTest.up-to-date assemble (swift)",
  "runtimes" : [ {
    "testProject" : "bigSwiftApp",
    "linux" : 110000
  }, {
    "testProject" : "mediumSwiftMulti",
    "linux" : 172000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.nativeplatform.NativeBuildPerformanceTest.assemble with header file change",
  "runtimes" : [ {
    "testProject" : "bigCppApp",
    "linux" : 236000
  }, {
    "testProject" : "bigCppMulti",
    "linux" : 281000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.corefeature.ExcludeRuleMergingPerformanceTest.merge exclude rules",
  "runtimes" : [ {
    "testProject" : "excludeRuleMergingBuild",
    "linux" : 294000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.nativeplatform.RealWorldNativePluginPerformanceTest.build with source file change",
  "runtimes" : [ {
    "testProject" : "mediumNativeMonolithic",
    "linux" : 268000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.java.JavaUpToDatePerformanceTest.up-to-date assemble (parallel true)",
  "runtimes" : [ {
    "testProject" : "largeJavaMultiProject",
    "linux" : 462000
  } ]
}, {
  "scenario" : "org.gradle.performance.regression.corefeature.RichConsolePerformanceTest.cleanTest test with rich console",
  "runtimes" : [ {
    "testProject" : "withVerboseJUnit",
    "linux" : 65000
  } ]
} ]